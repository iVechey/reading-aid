{"ast":null,"code":"var _jsxFileName = \"D:\\\\reading-aid\\\\teacher\\\\src\\\\ClassOverview.js\";\nimport React from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ClassOverview extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderRows = this.renderRows.bind(this);\n    this.getClassrooms = this.getClassrooms.bind(this);\n    this.state = {\n      classrooms: [],\n      user: firebase.auth().currentUser\n    };\n    this.getClassrooms(this.state.user.displayName);\n  }\n\n  getClassrooms(user) {\n    firebase.database().ref('teachers').child(user).child('classrooms').on('value', snapshot => {\n      if (snapshot.exists()) {\n        snapshot.forEach(child => {\n          this.state.classrooms.push(child.val());\n        });\n      }\n    });\n  }\n\n  renderRows() {\n    const classrooms = this.state.classrooms;\n\n    if (classrooms.length > 0) {\n      return classrooms.map((classroom, index) => {\n        return (\n          /*#__PURE__*/\n          // TODO want to make this so you can click on the classroom's row to go to that specific classroom's page. \n          // right now it either makes the table rows not appear or it gives a \"maximum update depth error\" for some reason.\n          _jsxDEV(\"tr\", {\n            \"data-index\": index,\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: classroom.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: classroom.code\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: classroom.num_students\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this)]\n          }, \"classroom-\" + index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        );\n      });\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"homepage-container\",\n      className: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"welcome-banner\",\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Welcome \", this.state.user.displayName, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dashboard-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-lg btn-secondary\",\n          onClick: this.props.createClassroom,\n          children: \"Create Classroom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-lg btn-secondary\",\n          onClick: this.props.logout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), classrooms.length > 0, \" ? (\", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Classrooms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Number of Students\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.renderRows()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ClassOverview;","map":{"version":3,"sources":["D:/reading-aid/teacher/src/ClassOverview.js"],"names":["React","firebase","ClassOverview","Component","constructor","props","renderRows","bind","getClassrooms","state","classrooms","user","auth","currentUser","displayName","database","ref","child","on","snapshot","exists","forEach","push","val","length","map","classroom","index","name","code","num_students","render","createClassroom","logout"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAO,mBAAP;AACA,OAAO,eAAP;;;AAEA,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,IAAI,EAAEV,QAAQ,CAACW,IAAT,GAAgBC;AAFb,KAAb;AAIA,SAAKL,aAAL,CAAmB,KAAKC,KAAL,CAAWE,IAAX,CAAgBG,WAAnC;AACH;;AAEDN,EAAAA,aAAa,CAACG,IAAD,EAAO;AAChBV,IAAAA,QAAQ,CAACc,QAAT,GAAoBC,GAApB,CAAwB,UAAxB,EAAoCC,KAApC,CAA0CN,IAA1C,EAAgDM,KAAhD,CAAsD,YAAtD,EAAoEC,EAApE,CAAuE,OAAvE,EAAiFC,QAAD,IAAc;AAC1F,UAAGA,QAAQ,CAACC,MAAT,EAAH,EAAsB;AAClBD,QAAAA,QAAQ,CAACE,OAAT,CAAkBJ,KAAD,IAAW;AACxB,eAAKR,KAAL,CAAWC,UAAX,CAAsBY,IAAtB,CAA2BL,KAAK,CAACM,GAAN,EAA3B;AACH,SAFD;AAGH;AACJ,KAND;AAOH;;AAEDjB,EAAAA,UAAU,GAAG;AACT,UAAMI,UAAU,GAAG,KAAKD,KAAL,CAAWC,UAA9B;;AACA,QAAGA,UAAU,CAACc,MAAX,GAAoB,CAAvB,EAA0B;AACtB,aAAOd,UAAU,CAACe,GAAX,CAAe,CAACC,SAAD,EAAYC,KAAZ,KAAsB;AACpC;AAAA;AACI;AACA;AACA;AAAI,0BAAYA,KAAhB;AAAA,oCACI;AAAA,wBAAKD,SAAS,CAACE;AAAf;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKF,SAAS,CAACG;AAAf;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAKH,SAAS,CAACI;AAAf;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAA4B,eAAaH,KAAzC;AAAA;AAAA;AAAA;AAAA;AAHJ;AASH,OAVE,CAAP;AAWH,KAZD,MAYO;AACH,aAAO,IAAP;AACH;AACJ;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,EAAE,EAAC,oBAAR;AAA6B,MAAA,SAAS,EAAC,iBAAvC;AAAA,8BACI;AAAI,QAAA,EAAE,EAAC,gBAAP;AAAwB,QAAA,SAAS,EAAC,aAAlC;AAAA,+BAAgD;AAAA,iCAAiB,KAAKtB,KAAL,CAAWE,IAAX,CAAgBG,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,EAAE,EAAC,mBAAR;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,0BAAlB;AAA6C,UAAA,OAAO,EAAE,KAAKT,KAAL,CAAW2B,eAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,0BAAlB;AAA6C,UAAA,OAAO,EAAE,KAAK3B,KAAL,CAAW4B,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMKvB,UAAU,CAACc,MAAX,GAAoB,CANzB,uBAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA,gCACI;AAAA,iCACI;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAA,oBACK,KAAKlB,UAAL;AADL;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAwBH;;AAlEuC;;AAqE5C,eAAeJ,aAAf","sourcesContent":["import React from 'react';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport \"firebase/auth\";\r\n\r\nclass ClassOverview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.renderRows = this.renderRows.bind(this);\r\n        this.getClassrooms = this.getClassrooms.bind(this);\r\n        this.state = {\r\n            classrooms: [],\r\n            user: firebase.auth().currentUser,\r\n        }\r\n        this.getClassrooms(this.state.user.displayName);\r\n    }\r\n\r\n    getClassrooms(user) {\r\n        firebase.database().ref('teachers').child(user).child('classrooms').on('value', (snapshot) => {\r\n            if(snapshot.exists()) {\r\n                snapshot.forEach((child) => {\r\n                    this.state.classrooms.push(child.val());\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    renderRows() {\r\n        const classrooms = this.state.classrooms;\r\n        if(classrooms.length > 0) {\r\n            return classrooms.map((classroom, index) => {\r\n                    return (\r\n                        // TODO want to make this so you can click on the classroom's row to go to that specific classroom's page. \r\n                        // right now it either makes the table rows not appear or it gives a \"maximum update depth error\" for some reason.\r\n                        <tr data-index={index} key={\"classroom-\"+index}>\r\n                            <td>{classroom.name}</td>\r\n                            <td>{classroom.code}</td>\r\n                            <td>{classroom.num_students}</td>\r\n                        </tr>\r\n                    );\r\n                });\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"homepage-container\" className=\"container-fluid\">\r\n                <h2 id=\"welcome-banner\" className=\"text-center\"><strong>Welcome {this.state.user.displayName}!</strong></h2>\r\n                <div id=\"dashboard-buttons\">\r\n                    <button className=\"btn btn-lg btn-secondary\" onClick={this.props.createClassroom}>Create Classroom</button>\r\n                    <button className=\"btn btn-lg btn-secondary\" onClick={this.props.logout}>Logout</button>\r\n                </div>\r\n                {classrooms.length > 0} ? (\r\n                <h1>Your Classrooms</h1>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Code</th>\r\n                            <th>Number of Students</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.renderRows()}\r\n                    </tbody>\r\n                </table>\r\n                )\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClassOverview;"]},"metadata":{},"sourceType":"module"}