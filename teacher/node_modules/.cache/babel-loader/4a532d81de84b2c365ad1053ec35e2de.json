{"ast":null,"code":"var _jsxFileName = \"D:\\\\reading-aid\\\\teacher\\\\src\\\\Home.js\";\nimport { Component } from \"react\";\nimport \"./Home.css\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/auth\";\nimport CreateClassroom from \"./CreateClassroom\";\nimport ClassOverview from \"./ClassOverview\";\nimport ShowClassroom from \"./ShowClassroom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.createClassroom = this.createClassroom.bind(this);\n    this.showClassroom = this.showClassroom.bind(this);\n    this.showDashboard = this.showDashboard.bind(this);\n    this.deleteClassroom = this.deleteClassroom.bind(this);\n    this.state = {\n      uid: firebase.auth().currentUser.uid,\n      isCreatingClassroom: false,\n      isShowingClassroom: false,\n      isViewingTexts: false,\n      isCreatingText: false,\n      classroom: null\n    };\n  }\n\n  createClassroom() {\n    this.setState({\n      isCreatingClassroom: true\n    });\n  }\n\n  showClassroom(code) {\n    console.log(code);\n    firebase.database().ref(\"classrooms/\" + code).get().then(snapshot => {\n      if (snapshot.exists()) {\n        var classroom = snapshot.val();\n        console.log(classroom);\n        this.setState({\n          isShowingClassroom: true,\n          classroom: classroom\n        });\n      } else {\n        console.log(\"Invalid code '\" + code + \"'\");\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  viewTexts() {\n    this.setState({\n      isViewingTexts: true\n    });\n  }\n\n  createText() {\n    this.setState({\n      isCreatingText: true\n    });\n  }\n\n  showDashboard() {\n    this.setState({\n      isCreatingClassroom: false,\n      isShowingClassroom: false,\n      isViewingTexts: false,\n      isCreatingText: false,\n      classroom: null\n    });\n  }\n\n  deleteClassroom(code) {\n    // delete from overall classrooms list\n    firebase.database().ref('classrooms').child(code).remove(); // delete from teacher's individual classroom list\n\n    firebase.database().ref('teachers').child(this.state.uid).child('classrooms').child(code).remove();\n    alert(\"Classroom '\" + code + \"' deleted.\");\n    this.showDashboard();\n  }\n\n  render() {\n    if (this.state.isCreatingClassroom) {\n      return /*#__PURE__*/_jsxDEV(CreateClassroom, {\n        returnToDashboard: this.showDashboard,\n        uid: this.state.uid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 20\n      }, this);\n    } else if (this.state.isShowingClassroom) {\n      return /*#__PURE__*/_jsxDEV(ShowClassroom, {\n        classroom: this.state.classroom,\n        showDashboard: this.showDashboard,\n        deleteClassroom: this.deleteClassroom,\n        editClassroom: this.editClassroom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 20\n      }, this);\n    } else if (this.state.isViewingTexts) {\n      return /*#__PURE__*/_jsxDEV(ViewTexts, {\n        uid: this.state.currentUser.uid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 20\n      }, this);\n    } else if (this.state.isCreatingText) {\n      return /*#__PURE__*/_jsxDEV(CreateText, {\n        uid: this.state.currentUser.uid\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(ClassOverview, {\n        logout: this.props.logout,\n        createClassroom: this.createClassroom,\n        showClassroom: this.showClassroom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["D:/reading-aid/teacher/src/Home.js"],"names":["Component","firebase","CreateClassroom","ClassOverview","ShowClassroom","Home","constructor","props","createClassroom","bind","showClassroom","showDashboard","deleteClassroom","state","uid","auth","currentUser","isCreatingClassroom","isShowingClassroom","isViewingTexts","isCreatingText","classroom","setState","code","console","log","database","ref","get","then","snapshot","exists","val","catch","error","viewTexts","createText","child","remove","alert","render","editClassroom","logout"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport \"./Home.css\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport \"firebase/auth\";\r\nimport CreateClassroom from \"./CreateClassroom\";\r\nimport ClassOverview from \"./ClassOverview\";\r\nimport ShowClassroom from \"./ShowClassroom\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.createClassroom = this.createClassroom.bind(this);\r\n        this.showClassroom = this.showClassroom.bind(this);\r\n        this.showDashboard = this.showDashboard.bind(this);\r\n        this.deleteClassroom = this.deleteClassroom.bind(this);\r\n        this.state = {\r\n            uid: firebase.auth().currentUser.uid,\r\n            isCreatingClassroom: false,\r\n            isShowingClassroom: false,\r\n            isViewingTexts: false,\r\n            isCreatingText: false,\r\n            classroom: null,\r\n        }\r\n    }\r\n\r\n    createClassroom() {\r\n        this.setState({ isCreatingClassroom: true });\r\n    }\r\n\r\n    showClassroom(code) {\r\n        console.log(code);\r\n        firebase.database().ref(\"classrooms/\" + code).get().then((snapshot) => {\r\n            if(snapshot.exists()) {\r\n                var classroom = snapshot.val();\r\n                console.log(classroom);\r\n                this.setState({ isShowingClassroom: true, classroom: classroom });\r\n            } else {\r\n                console.log(\"Invalid code '\" + code + \"'\");\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    viewTexts() {\r\n        this.setState({ isViewingTexts: true});\r\n    }\r\n\r\n    createText() {\r\n        this.setState({ isCreatingText: true });\r\n    }\r\n\r\n    showDashboard() {\r\n        this.setState({ isCreatingClassroom: false, isShowingClassroom: false, isViewingTexts: false, isCreatingText: false, classroom: null });\r\n    }\r\n\r\n    deleteClassroom(code) {\r\n        // delete from overall classrooms list\r\n        firebase.database().ref('classrooms').child(code).remove();\r\n        // delete from teacher's individual classroom list\r\n        firebase.database().ref('teachers').child(this.state.uid).child('classrooms').child(code).remove();\r\n        alert(\"Classroom '\" + code + \"' deleted.\");\r\n        this.showDashboard();\r\n    }\r\n\r\n   render() {\r\n       if(this.state.isCreatingClassroom) {\r\n            return <CreateClassroom returnToDashboard={this.showDashboard} uid={this.state.uid} />;\r\n        } else if(this.state.isShowingClassroom) {\r\n            return <ShowClassroom classroom={this.state.classroom} showDashboard={this.showDashboard} deleteClassroom={this.deleteClassroom} editClassroom={this.editClassroom} /> \r\n        } else if(this.state.isViewingTexts) {\r\n            return <ViewTexts uid={this.state.currentUser.uid} />;\r\n        } else if(this.state.isCreatingText) {\r\n            return <CreateText uid={this.state.currentUser.uid} />;\r\n        } else {\r\n            return <ClassOverview logout={this.props.logout} createClassroom={this.createClassroom} showClassroom={this.showClassroom} />;\r\n        }\r\n   }\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}